{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { ProductListReducer } from './HomeReducer';\nimport thunk from 'redux-thunk'; //redux - thunk\n\nimport { ProductScreenReducer } from './ProductReducer';\nimport { CartReducer } from './CartReducer';\nimport { Signinreducer } from './Signinreducer';\nconst iniitialState = {};\n\nfunction saveToLocalStorage(state1, state2) {\n  try {\n    const serialisedState = JSON.stringify(state1);\n    localStorage.setItem(\"persistantState\", serialisedState);\n    const userinfo = JSON.stringify(state2);\n    localStorage.setItem(\"UserState\", userinfo);\n  } catch (e) {\n    console.warn(e);\n  }\n} // load string from localStarage and convert into an Object\n// invalid output must be undefined\n\n\nfunction loadFromLocalStorage() {\n  try {\n    const serialisedState = localStorage.getItem(\"persistantState\");\n    const userinfo = localStorage.getItem(\"UserState\");\n    if (serialisedState && user === null) return undefined;\n    return JSON.parse(serialisedState);\n    if (userinfo === null) return undefined;\n    return JSON.parse(userinfo);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n}\n\nfunction localsaveUser(state) {\n  try {\n    const serialisedState = JSON.stringify(state);\n    localStorage.setItem(\"UserState\", serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\nfunction loadStorageUser() {\n  try {\n    const serialisedState = localStorage.getItem(\"UserState\");\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n}\n\nconst reducer = combineReducers({\n  productList: ProductListReducer,\n  productInfo: ProductScreenReducer,\n  addtocart: CartReducer,\n  signin: Signinreducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //used for using react devtools here compose comes from redux...also advanced store code used as middleware is used\n\nconst store = createStore(reducer, loadFromLocalStorage(), loadStorageUser(), composeEnhancer(applyMiddleware(thunk)));\nstore.subscribe(() => saveToLocalStorage(store.getState().addtocart, store.getState().signin)); //localStorage.setItem('cartItems',JSON.stringify(initialstate.cartitems));  \n\nexport default store;","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/Store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","ProductListReducer","thunk","ProductScreenReducer","CartReducer","Signinreducer","iniitialState","saveToLocalStorage","state1","state2","serialisedState","JSON","stringify","localStorage","setItem","userinfo","e","console","warn","loadFromLocalStorage","getItem","user","undefined","parse","localsaveUser","state","loadStorageUser","reducer","productList","productInfo","addtocart","signin","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState"],"mappings":"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","sourcesContent":["import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\nimport {ProductListReducer} from './HomeReducer';\r\nimport thunk from 'redux-thunk'; //redux - thunk\r\nimport { ProductScreenReducer } from './ProductReducer';\r\nimport { CartReducer } from './CartReducer';\r\nimport {Signinreducer} from './Signinreducer';\r\n\r\n\r\nconst iniitialState={\r\n\r\n}\r\n\r\nfunction saveToLocalStorage(state1,state2) {\r\n    try {\r\n      const serialisedState = JSON.stringify(state1);\r\n      localStorage.setItem(\"persistantState\", serialisedState);\r\n      const userinfo = JSON.stringify(state2);\r\n      localStorage.setItem(\"UserState\", userinfo);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n  \r\n  // load string from localStarage and convert into an Object\r\n  // invalid output must be undefined\r\n  function loadFromLocalStorage() {\r\n    try {\r\n      const serialisedState = localStorage.getItem(\"persistantState\");\r\n\r\n      const userinfo = localStorage.getItem(\"UserState\");\r\n      if (serialisedState&&user === null) return undefined;\r\n      return JSON.parse(serialisedState);\r\n\r\n      \r\n      if (userinfo === null) return undefined;\r\n      return JSON.parse(userinfo);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  function localsaveUser(state) {\r\n    try {\r\n      const serialisedState = JSON.stringify(state);\r\n      localStorage.setItem(\"UserState\", serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n\r\n  function loadStorageUser() {\r\n    try {\r\n      const serialisedState = localStorage.getItem(\"UserState\");\r\n      if (serialisedState === null) return undefined;\r\n      return JSON.parse(serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\nconst reducer=combineReducers({\r\n    productList:ProductListReducer,\r\n    productInfo:ProductScreenReducer,\r\n    addtocart:CartReducer,\r\n    signin:Signinreducer,\r\n})\r\n\r\n\r\nconst composeEnhancer= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //used for using react devtools here compose comes from redux...also advanced store code used as middleware is used\r\n\r\nconst store=createStore(reducer, loadFromLocalStorage(),loadStorageUser(),composeEnhancer(applyMiddleware(thunk)));\r\nstore.subscribe(() => saveToLocalStorage(store.getState().addtocart,store.getState().signin));\r\n//localStorage.setItem('cartItems',JSON.stringify(initialstate.cartitems));  \r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}