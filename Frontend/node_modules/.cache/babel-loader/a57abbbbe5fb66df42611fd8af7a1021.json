{"ast":null,"code":"import { CART_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, DELETE_CART_ITEM } from \"./Actionconstants\";\nimport { useSelector } from \"react-redux\";\nconst initialstate = {\n  cartitems: [localStorage.getItem('addtocart') ? JSON.parse(localStorage.getItem('addtocart')) : ' '],\n  shippingaddress: localStorage.getItem('shippingaddress') ? JSON.parse(localStorage.getItem('shippingaddress')) : {}\n};\nexport const CartReducer = (state = initialstate, action) => {\n  //const cartupdate=useSelector((state)=>state.deletefromcart);\n  switch (action.type) {\n    case CART_ITEM:\n      const item = action.payload;\n      console.log(item);\n      const itemexist = state.cartitems.find(x => x.product === item.product);\n      console.log(itemexist);\n      console.log(state.cartitems);\n\n      if (itemexist) {\n        return { ...state,\n          cartitems: state.cartitems.map(x => x.product === item.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartitems: [...state.cartitems, item]\n        };\n      }\n\n    case DELETE_CART_ITEM:\n      return { ...state,\n        cartitems: state.cartitems.filter(item => item.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingaddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        shippingaddress: action.payload\n      };\n\n    default:\n      return state;\n    //cartitems:cartupdate,\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/CartReducer.js"],"names":["CART_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","DELETE_CART_ITEM","useSelector","initialstate","cartitems","localStorage","getItem","JSON","parse","shippingaddress","CartReducer","state","action","type","item","payload","console","log","itemexist","find","x","product","map","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,wBAApB,EAA8CC,0BAA9C,EAA0EC,gBAA1E,QAAkG,mBAAlG;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,MAAMC,YAAY,GAAC;AAEXC,EAAAA,SAAS,EAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAEX,GAFU,CAFC;AAKXG,EAAAA,eAAe,EAACJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADc,GAEhB;AAPW,CAAnB;AAeA,OAAO,MAAMI,WAAW,GAAC,CAACC,KAAK,GAACR,YAAP,EAAoBS,MAApB,KAA6B;AAClD;AAEA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,SAAL;AACI,YAAMgB,IAAI,GAACF,MAAM,CAACG,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,YAAMI,SAAS,GAACP,KAAK,CAACP,SAAN,CAAgBe,IAAhB,CAAsBC,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYP,IAAI,CAACO,OAA3C,CAAhB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACP,SAAlB;;AAIA,UAAGc,SAAH,EAAa;AACT,eAAM,EACF,GAAGP,KADD;AAEFP,UAAAA,SAAS,EAACO,KAAK,CAACP,SAAN,CAAgBkB,GAAhB,CAAqBF,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYP,IAAI,CAACO,OAAjB,GAAyBP,IAAzB,GAA8BM,CAAvD;AAFR,SAAN;AAOH,OARD,MASI;AAEA,eAAM,EACF,GAAGT,KADD;AAEFP,UAAAA,SAAS,EAAC,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAoBU,IAApB;AAFR,SAAN;AAMH;;AAGL,SAAKb,gBAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFP,QAAAA,SAAS,EAACO,KAAK,CAACP,SAAN,CAAgBmB,MAAhB,CAAwBT,IAAD,IAAQA,IAAI,CAACO,OAAL,KAAiBT,MAAM,CAACG,OAAvD;AAFR,OAAN;;AAKJ,SAAKf,0BAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFF,QAAAA,eAAe,EAACG,MAAM,CAACG;AAFrB,OAAN;;AAIJ,SAAKhB,wBAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFF,QAAAA,eAAe,EAACG,MAAM,CAACG;AAFrB,OAAN;;AAOJ;AACI,aAAOJ,KAAP;AACI;AApDZ;AA0DH,CA7DM;KAAMD,W","sourcesContent":["import { CART_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, DELETE_CART_ITEM } from \"./Actionconstants\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst initialstate={\r\n    \r\n        cartitems:[localStorage.getItem('addtocart')\r\n        ? JSON.parse(localStorage.getItem('addtocart')):\r\n        ' '],\r\n        shippingaddress:localStorage.getItem('shippingaddress')\r\n        ? JSON.parse(localStorage.getItem('shippingaddress')):\r\n        {},\r\n \r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport const CartReducer=(state=initialstate,action)=>{\r\n    //const cartupdate=useSelector((state)=>state.deletefromcart);\r\n    \r\n    switch(action.type){\r\n        case CART_ITEM:\r\n            const item=action.payload;\r\n            console.log(item);\r\n           \r\n            const itemexist=state.cartitems.find((x)=>x.product===item.product);\r\n            console.log(itemexist);\r\n            console.log(state.cartitems);\r\n\r\n        \r\n         \r\n            if(itemexist){\r\n                return{\r\n                    ...state,\r\n                    cartitems:state.cartitems.map((x)=>x.product===item.product?item:x),\r\n                    \r\n                }\r\n\r\n                \r\n            }\r\n            else{\r\n                \r\n                return{\r\n                    ...state,\r\n                    cartitems:[...state.cartitems,item],\r\n                    \r\n                }\r\n                \r\n            }\r\n            \r\n        \r\n        case DELETE_CART_ITEM:\r\n            return{\r\n                ...state,\r\n                cartitems:state.cartitems.filter((item)=>item.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingaddress:action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                shippingaddress:action.payload\r\n            }\r\n\r\n        \r\n        \r\n        default:\r\n            return state;\r\n                //cartitems:cartupdate,\r\n            \r\n                \r\n    }\r\n    \r\n\r\n}"]},"metadata":{},"sourceType":"module"}