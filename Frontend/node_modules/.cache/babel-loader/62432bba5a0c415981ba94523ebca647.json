{"ast":null,"code":"import { USER_SIGNIN_FAIL, USER_SIGNIN } from \"./Actionconstants\";\nimport bcrypt from 'bcryptjs';\nconst initialstate = {\n  user: [],\n  message: ''\n};\nexport const Signinreducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case USER_SIGNIN:\n      const data = action.payload.data;\n      console.log(data.createdUsers);\n      console.log(action.payload.email);\n      const useremail = data.createdUsers.find(x => x.email === action.payload.email);\n      const userpassword = bcrypt.compareSync(action.payload.password, useremail.password); //\n\n      if (useremail && userpassword) {\n        return { ...state,\n          user: useremail,\n          message: 'user found'\n        };\n      } else {\n        return { ...state,\n          message: 'user not found'\n        };\n      }\n\n    case USER_SIGNIN_FAIL:\n      return { ...state,\n        message: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Signinreducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signinreducer\");","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/Signinreducer.js"],"names":["USER_SIGNIN_FAIL","USER_SIGNIN","bcrypt","initialstate","user","message","Signinreducer","state","action","type","data","payload","console","log","createdUsers","email","useremail","find","x","userpassword","compareSync","password"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,IAAI,EAAC,EADU;AAEfC,EAAAA,OAAO,EAAC;AAFO,CAAnB;AAKA,OAAO,MAAMC,aAAa,GAAC,CAACC,KAAK,GAACJ,YAAP,EAAoBK,MAApB,KAA6B;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAL;AACI,YAAMS,IAAI,GAACF,MAAM,CAACG,OAAP,CAAeD,IAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,YAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAP,CAAeI,KAA3B;AAEA,YAAMC,SAAS,GAAEN,IAAI,CAACI,YAAL,CAAkBG,IAAlB,CAAwBC,CAAD,IAAKA,CAAC,CAACH,KAAF,KAAYP,MAAM,CAACG,OAAP,CAAeI,KAAvD,CAAjB;AAIA,YAAMI,YAAY,GAAEjB,MAAM,CAACkB,WAAP,CAAmBZ,MAAM,CAACG,OAAP,CAAeU,QAAlC,EAA2CL,SAAS,CAACK,QAArD,CAApB,CATJ,CAUI;;AAEA,UAAGL,SAAS,IAAIG,YAAhB,EAA6B;AACzB,eAAM,EACF,GAAGZ,KADD;AAEFH,UAAAA,IAAI,EAACY,SAFH;AAGFX,UAAAA,OAAO,EAAC;AAHN,SAAN;AAKH,OAND,MAOI;AACA,eAAM,EACF,GAAGE,KADD;AAEFF,UAAAA,OAAO,EAAC;AAFN,SAAN;AAMH;;AAEL,SAAKL,gBAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,OAAO,EAACG,MAAM,CAACG;AAFb,OAAN;;AAKJ;AACI,aAAOJ,KAAP;AApCR;AAuCH,CAxCM;KAAMD,a","sourcesContent":["import { USER_SIGNIN_FAIL, USER_SIGNIN } from \"./Actionconstants\"\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst initialstate={\r\n    user:[],\r\n    message:'',\r\n}\r\n\r\nexport const Signinreducer=(state=initialstate,action)=>{\r\n    switch(action.type){\r\n        case USER_SIGNIN:\r\n            const data=action.payload.data;\r\n            console.log(data.createdUsers);\r\n            console.log(action.payload.email);\r\n          \r\n            const useremail= data.createdUsers.find((x)=>x.email === action.payload.email);\r\n\r\n          \r\n\r\n            const userpassword= bcrypt.compareSync(action.payload.password,useremail.password);\r\n            //\r\n      \r\n            if(useremail && userpassword){\r\n                return{\r\n                    ...state,\r\n                    user:useremail,\r\n                    message:'user found',\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    message:'user not found'\r\n                }\r\n                \r\n                \r\n            }\r\n       \r\n        case USER_SIGNIN_FAIL:\r\n            return{\r\n                ...state,\r\n                message:action.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}