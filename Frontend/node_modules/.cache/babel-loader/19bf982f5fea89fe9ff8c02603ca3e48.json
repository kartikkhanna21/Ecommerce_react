{"ast":null,"code":"import { CART_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, DELETE_CART_ITEM } from \"./Actionconstants\";\nimport { useSelector } from \"react-redux\";\nconst initialstate = {\n  cartitems: [localStorage.getItem('addtocart') ? JSON.parse(localStorage.getItem('addtocart')) : ' '],\n  shippingaddress: localStorage.getItem('shippingaddress') ? JSON.parse(localStorage.getItem('shippingaddress')) : {},\n  paymentmethod: 'PayPal'\n};\nexport const CartReducer = (state = initialstate, action) => {\n  //const cartupdate=useSelector((state)=>state.deletefromcart);\n  switch (action.type) {\n    case CART_ITEM:\n      const item = action.payload;\n      console.log(item);\n\n      if (state.cartitems != []) {\n        const itemexist = state.cartitems.find(x => x.product === item.product);\n        console.log(itemexist);\n        console.log(state.cartitems);\n\n        if (itemexist) {\n          return { ...state,\n            cartitems: state.cartitems.map(x => x.product === item.product ? item : x)\n          };\n        } else {\n          return { ...state,\n            cartitems: [...state.cartitems, item]\n          };\n        }\n      }\n\n    case DELETE_CART_ITEM:\n      return { ...state,\n        cartitems: state.cartitems.filter(item => item.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingaddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentmethod: action.payload\n      };\n\n    default:\n      return state;\n    //cartitems:cartupdate,\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/CartReducer.js"],"names":["CART_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","DELETE_CART_ITEM","useSelector","initialstate","cartitems","localStorage","getItem","JSON","parse","shippingaddress","paymentmethod","CartReducer","state","action","type","item","payload","console","log","itemexist","find","x","product","map","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,wBAApB,EAA8CC,0BAA9C,EAA0EC,gBAA1E,QAAkG,mBAAlG;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,MAAMC,YAAY,GAAC;AAEXC,EAAAA,SAAS,EAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAEX,GAFU,CAFC;AAKXG,EAAAA,eAAe,EAACJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADc,GAEhB,EAPW;AAQXI,EAAAA,aAAa,EAAC;AARH,CAAnB;AAgBA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACT,YAAP,EAAoBU,MAApB,KAA6B;AAClD;AAEA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhB,SAAL;AACI,YAAMiB,IAAI,GAACF,MAAM,CAACG,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,UAAGH,KAAK,CAACR,SAAN,IAAiB,EAApB,EAAuB;AACnB,cAAMe,SAAS,GAACP,KAAK,CAACR,SAAN,CAAgBgB,IAAhB,CAAsBC,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYP,IAAI,CAACO,OAA3C,CAAhB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACR,SAAlB;;AAIA,YAAGe,SAAH,EAAa;AACT,iBAAM,EACF,GAAGP,KADD;AAEFR,YAAAA,SAAS,EAACQ,KAAK,CAACR,SAAN,CAAgBmB,GAAhB,CAAqBF,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYP,IAAI,CAACO,OAAjB,GAAyBP,IAAzB,GAA8BM,CAAvD;AAFR,WAAN;AAOH,SARD,MASI;AAEA,iBAAM,EACF,GAAGT,KADD;AAEFR,YAAAA,SAAS,EAAC,CAAC,GAAGQ,KAAK,CAACR,SAAV,EAAoBW,IAApB;AAFR,WAAN;AAMH;AACJ;;AAKL,SAAKd,gBAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFR,QAAAA,SAAS,EAACQ,KAAK,CAACR,SAAN,CAAgBoB,MAAhB,CAAwBT,IAAD,IAAQA,IAAI,CAACO,OAAL,KAAiBT,MAAM,CAACG,OAAvD;AAFR,OAAN;;AAKJ,SAAKhB,0BAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFH,QAAAA,eAAe,EAACI,MAAM,CAACG;AAFrB,OAAN;;AAIJ,SAAKjB,wBAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFF,QAAAA,aAAa,EAACG,MAAM,CAACG;AAFnB,OAAN;;AAOJ;AACI,aAAOJ,KAAP;AACI;AAxDZ;AA8DH,CAjEM;KAAMD,W","sourcesContent":["import { CART_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, DELETE_CART_ITEM } from \"./Actionconstants\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst initialstate={\r\n    \r\n        cartitems:[localStorage.getItem('addtocart')\r\n        ? JSON.parse(localStorage.getItem('addtocart')):\r\n        ' '],\r\n        shippingaddress:localStorage.getItem('shippingaddress')\r\n        ? JSON.parse(localStorage.getItem('shippingaddress')):\r\n        {},\r\n        paymentmethod:'PayPal',\r\n \r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport const CartReducer=(state=initialstate,action)=>{\r\n    //const cartupdate=useSelector((state)=>state.deletefromcart);\r\n    \r\n    switch(action.type){\r\n        case CART_ITEM:\r\n            const item=action.payload;\r\n            console.log(item);\r\n\r\n            if(state.cartitems!=[]){\r\n                const itemexist=state.cartitems.find((x)=>x.product===item.product);\r\n                console.log(itemexist);\r\n                console.log(state.cartitems);\r\n    \r\n            \r\n             \r\n                if(itemexist){\r\n                    return{\r\n                        ...state,\r\n                        cartitems:state.cartitems.map((x)=>x.product===item.product?item:x),\r\n                        \r\n                    }\r\n    \r\n                    \r\n                }\r\n                else{\r\n                    \r\n                    return{\r\n                        ...state,\r\n                        cartitems:[...state.cartitems,item],\r\n                        \r\n                    }\r\n                    \r\n                }\r\n            }\r\n           \r\n\r\n            \r\n        \r\n        case DELETE_CART_ITEM:\r\n            return{\r\n                ...state,\r\n                cartitems:state.cartitems.filter((item)=>item.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingaddress:action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentmethod:action.payload\r\n            }\r\n\r\n        \r\n        \r\n        default:\r\n            return state;\r\n                //cartitems:cartupdate,\r\n            \r\n                \r\n    }\r\n    \r\n\r\n}"]},"metadata":{},"sourceType":"module"}