{"ast":null,"code":"import { CART_ITEM, DELETE_CART_ITEM, PRODUCT_INFO_FAIL, PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS } from \"./Actionconstants\";\nimport Axios from 'axios';\nimport CartReducer from './CartReducer';\nimport { useState } from \"react\";\nexport const ListProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('http://localhost:5000/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    const error = err.message;\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error\n    });\n  }\n};\nexport const ProductScreenproducts = id => async dispatch => {\n  console.log(id);\n  dispatch({\n    type: PRODUCT_INFO_REQUEST\n  });\n\n  try {\n    const product = await Axios.get(`http://localhost:5000/api/products/${id}`);\n    console.log(product.data);\n    dispatch({\n      type: PRODUCT_INFO_SUCCESS,\n      payload: product.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_INFO_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message //message fetched from express server check server.js\n      : error.message\n    });\n  }\n};\nexport const AddCartItem = (productId, quantity) => async dispatch => {\n  const {\n    data\n  } = await Axios.get(`http://localhost:5000/api/products/${productId}`);\n  dispatch({\n    type: CART_ITEM,\n    payload: {\n      name: data.name,\n      price: data.price,\n      image: data.image,\n      countinstock: data.countInStock,\n      product: data._id,\n      quantity\n    }\n  });\n};\nexport const DeleteCartItem = id => async (dispatch, getState) => {\n  dispatch({\n    type: DELETE_CART_ITEM,\n    payload: id\n  });\n  localStorage.setItem('persistantState', JSON.stringify(getState().cartitems));\n  console.log(id);\n};\nexport const Signinaction = email => async dispatch => {\n  try {\n    const {\n      data\n    } = await Axios.get(\"http://localhost:5000/api/users/seed\");\n    const user = await data.createdUsers.find(x => x.email === email);\n    console.log(user);\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: user\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/Action.js"],"names":["CART_ITEM","DELETE_CART_ITEM","PRODUCT_INFO_FAIL","PRODUCT_INFO_REQUEST","PRODUCT_INFO_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_SUCCESS","Axios","CartReducer","useState","ListProducts","dispatch","type","data","get","payload","err","error","message","ProductScreenproducts","id","console","log","product","response","AddCartItem","productId","quantity","name","price","image","countinstock","countInStock","_id","DeleteCartItem","getState","localStorage","setItem","JSON","stringify","cartitems","Signinaction","email","user","createdUsers","find","x"],"mappings":"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","sourcesContent":["import { CART_ITEM, DELETE_CART_ITEM, PRODUCT_INFO_FAIL, PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS } from \"./Actionconstants\";\r\nimport Axios from 'axios';\r\nimport CartReducer from './CartReducer';\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nexport const ListProducts=()=> async(dispatch)=>{\r\n   \r\n    dispatch({\r\n        type:PRODUCT_LIST_REQUEST\r\n    });\r\n    try{\r\n        const {data}=await Axios.get('http://localhost:5000/api/products');\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,payload:data\r\n        })\r\n    }\r\n    catch(err){\r\n        const error=err.message;\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,payload:error\r\n        })\r\n    \r\n    }\r\n}\r\n\r\nexport const ProductScreenproducts=(id)=> async(dispatch)=>{\r\n    console.log(id);\r\n    dispatch({\r\n        type:PRODUCT_INFO_REQUEST,\r\n    });\r\n    try{\r\n        const product= await Axios.get(`http://localhost:5000/api/products/${id}`);\r\n        console.log(product.data);\r\n        dispatch({\r\n            type:PRODUCT_INFO_SUCCESS,payload:product.data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_INFO_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ?error.response.data.message  //message fetched from express server check server.js\r\n            :error.message\r\n\r\n        }\r\n        )\r\n        \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport const AddCartItem=(productId,quantity)=>async(dispatch)=>{\r\n    const {data}= await Axios.get(`http://localhost:5000/api/products/${productId}`);\r\n    dispatch({\r\n        type:CART_ITEM,\r\n        payload:{\r\n            name:data.name,\r\n            price:data.price,\r\n            image:data.image,\r\n            countinstock:data.countInStock,\r\n            product:data._id,\r\n            quantity,\r\n        }\r\n    })\r\n  \r\n  \r\n}\r\n\r\nexport const DeleteCartItem=(id)=>async(dispatch,getState)=>{\r\n    dispatch({\r\n        type:DELETE_CART_ITEM,\r\n        payload:id,\r\n        \r\n    });\r\n    localStorage.setItem('persistantState',JSON.stringify(getState().cartitems));\r\n    console.log(id);\r\n\r\n}\r\n\r\nexport const Signinaction=(email)=>async(dispatch)=>{\r\n\r\n    try{\r\n        const {data}= await Axios.get(\"http://localhost:5000/api/users/seed\");\r\n        const user= await data.createdUsers.find((x)=>x.email === email);\r\n        console.log(user)\r\n        \r\n        dispatch({\r\n            type:USER_SIGNIN_SUCCESS,\r\n            payload:user\r\n        })\r\n    }\r\n\r\n    catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type:USER_SIGNIN_FAIL,\r\n            payload:err.message\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}