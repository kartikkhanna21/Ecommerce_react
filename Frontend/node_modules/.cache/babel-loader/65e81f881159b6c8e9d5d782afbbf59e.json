{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { ProductListReducer } from './HomeReducer';\nimport thunk from 'redux-thunk'; //redux - thunk\n\nimport { ProductScreenReducer } from './ProductReducer';\nimport { CartReducer } from './CartReducer';\nimport { Signinreducer } from './Signinreducer';\nimport { RegisterReducer } from './RegisterReducer'; //function saveToLocalStorage(state1,state2) {\n//try {\n//const serialisedState = JSON.stringify(state1);\n//localStorage.setItem(\"persistantState\", serialisedState);\n//const userinfo = JSON.stringify(state2);\n//localStorage.setItem(\"UserState\", userinfo);\n//} catch (e) {\n//console.warn(e);\n//}\n//}\n// load string from localStarage and convert into an Object\n// invalid output must be undefined\n// function loadFromLocalStorage() {\n//   try {\n//     const serialisedState = localStorage.getItem(\"persistantState\");\n//   const userinfo = localStorage.getItem(\"UserState\");\n//if (serialisedState&&userinfo === null) return undefined;\n//return JSON.parse(serialisedState,userinfo);\n// } catch (e) {\n//console.warn(e);\n//return undefined;\n//}\n//}\n// function localsaveUser(state) {\n//  try {\n//    const serialisedState = JSON.stringify(state);\n//    localStorage.setItem(\"UserState\", serialisedState);\n//  } catch (e) {\n//   console.warn(e);\n//}\n//}\n// function loadStorageUser() {\n//  try {\n//     const serialisedState = localStorage.getItem(\"UserState\");\n//     if (serialisedState === null) return undefined;\n//    return JSON.parse(serialisedState);\n//  } catch (e) {\n//   console.warn(e);\n//   return undefined;\n//   }\n// }\n\nconst reducer = combineReducers({\n  productList: ProductListReducer,\n  productInfo: ProductScreenReducer,\n  addtocart: CartReducer,\n  signin: Signinreducer,\n  register: RegisterReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //used for using react devtools here compose comes from redux...also advanced store code used as middleware is used\n//const store=createStore(reducer,iniitialState,loadFromLocalStorage(),composeEnhancer(applyMiddleware(thunk)));\n\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk))); //localStorage.setItem('cartItems',JSON.stringify(initialstate.cartitems));  \n\nexport default store;","map":{"version":3,"sources":["C:/react apps/amazon_frontend/Frontend/src/Store/Store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","ProductListReducer","thunk","ProductScreenReducer","CartReducer","Signinreducer","RegisterReducer","reducer","productList","productInfo","addtocart","signin","register","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,EAAoDC,OAApD,QAAkE,OAAlE;AACA,SAAQC,kBAAR,QAAiC,eAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEE;AACA;AAED;AACA;AACA;AAEE;AACH;AACA;AACG;AACH;AACA;AACA;AACA;AAEC;AACC;AACA;AACA;AACA;AACC;AACA;AACD;AAED;AACC;AACD;AACA;AACC;AACA;AACC;AACA;AACF;AACA;;AAED,MAAMC,OAAO,GAACT,eAAe,CAAC;AAC1BU,EAAAA,WAAW,EAACP,kBADc;AAE1BQ,EAAAA,WAAW,EAACN,oBAFc;AAG1BO,EAAAA,SAAS,EAACN,WAHgB;AAI1BO,EAAAA,MAAM,EAACN,aAJmB;AAK1BO,EAAAA,QAAQ,EAACN;AALiB,CAAD,CAA7B;AASA,MAAMO,eAAe,GAAEC,MAAM,CAACC,oCAAP,IAA+Cf,OAAtE,C,CAA+E;AAE/E;;AAEA,MAAMgB,KAAK,GAACnB,WAAW,CAACU,OAAD,EAASM,eAAe,CAACd,eAAe,CAACG,KAAD,CAAhB,CAAxB,CAAvB,C,CACA;;AAEA,eAAec,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\nimport {ProductListReducer} from './HomeReducer';\r\nimport thunk from 'redux-thunk'; //redux - thunk\r\nimport { ProductScreenReducer } from './ProductReducer';\r\nimport { CartReducer } from './CartReducer';\r\nimport {Signinreducer} from './Signinreducer';\r\nimport { RegisterReducer } from './RegisterReducer';\r\n\r\n\r\n\r\n//function saveToLocalStorage(state1,state2) {\r\n//try {\r\n//const serialisedState = JSON.stringify(state1);\r\n//localStorage.setItem(\"persistantState\", serialisedState);\r\n\r\n//const userinfo = JSON.stringify(state2);\r\n//localStorage.setItem(\"UserState\", userinfo);\r\n\r\n//} catch (e) {\r\n//console.warn(e);\r\n//}\r\n//}\r\n  \r\n  // load string from localStarage and convert into an Object\r\n  // invalid output must be undefined\r\n\r\n // function loadFromLocalStorage() {\r\n //   try {\r\n //     const serialisedState = localStorage.getItem(\"persistantState\");\r\n\r\n   //   const userinfo = localStorage.getItem(\"UserState\");\r\n//if (serialisedState&&userinfo === null) return undefined;\r\n//return JSON.parse(serialisedState,userinfo);\r\n   // } catch (e) {\r\n//console.warn(e);\r\n//return undefined;\r\n//}\r\n//}\r\n\r\n // function localsaveUser(state) {\r\n  //  try {\r\n  //    const serialisedState = JSON.stringify(state);\r\n  //    localStorage.setItem(\"UserState\", serialisedState);\r\n  //  } catch (e) {\r\n   //   console.warn(e);\r\n   //}\r\n  //}\r\n\r\n // function loadStorageUser() {\r\n  //  try {\r\n //     const serialisedState = localStorage.getItem(\"UserState\");\r\n //     if (serialisedState === null) return undefined;\r\n  //    return JSON.parse(serialisedState);\r\n  //  } catch (e) {\r\n   //   console.warn(e);\r\n   //   return undefined;\r\n //   }\r\n // }\r\n\r\nconst reducer=combineReducers({\r\n    productList:ProductListReducer,\r\n    productInfo:ProductScreenReducer,\r\n    addtocart:CartReducer,\r\n    signin:Signinreducer,\r\n    register:RegisterReducer\r\n})\r\n\r\n\r\nconst composeEnhancer= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //used for using react devtools here compose comes from redux...also advanced store code used as middleware is used\r\n\r\n//const store=createStore(reducer,iniitialState,loadFromLocalStorage(),composeEnhancer(applyMiddleware(thunk)));\r\n\r\nconst store=createStore(reducer,composeEnhancer(applyMiddleware(thunk)));\r\n//localStorage.setItem('cartItems',JSON.stringify(initialstate.cartitems));  \r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}